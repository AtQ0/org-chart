version: '3.9'

services:
  db:
    image: postgres:16
    container_name: org-chart-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Runs once on first boot (fresh volume)
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 20

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev # use the dev stage for hot reload
    container_name: org-chart-web
    working_dir: /app
    # Bind mount source for live reload, keep node_modules from image
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      # Container-to-container connection string
      PGURI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NODE_ENV: development
      HOSTNAME: 0.0.0.0 # ensure Next dev is reachable from host
      PORT: 3000
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3000:3000'

volumes:
  pgdata:
